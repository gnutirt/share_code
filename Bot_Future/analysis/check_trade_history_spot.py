import Binance_bot_trade.connection.connect_binance_spot as connect_binance_spot
import Binance_bot_trade.config.config as config

client_spot = connect_binance_spot.client_spot  # S·ª≠ d·ª•ng client_spot t·ª´ file k·∫øt n·ªëi

# H√†m ki·ªÉm tra l·ªãch s·ª≠ giao d·ªãch Spot v√† tr·∫£ v·ªÅ danh s√°ch giao d·ªãch
def check_trade_history_spot(symbol, limit=100):
    print(f"\nüìå Ki·ªÉm tra l·ªãch s·ª≠ giao d·ªãch Spot cho c·∫∑p {symbol}...")
    try:
        trades = client_spot.get_my_trades(symbol=symbol, limit=limit)
        if not trades:
            print(f"‚ùå Kh√¥ng c√≥ giao d·ªãch n√†o ƒë∆∞·ª£c t√¨m th·∫•y cho c·∫∑p {symbol}.")
            return []
        
        trade_list = [
            {
                "id": trade["id"],
                "symbol": symbol,
                "price": trade["price"],
                "qty": trade["qty"],
                "side": "BUY" if trade["isBuyer"] else "SELL",
                "time": trade["time"]
            }
            for trade in trades
        ]

        return trade_list
    
    except Exception as e:
        print(f"‚ùå L·ªói khi l·∫•y l·ªãch s·ª≠ giao d·ªãch Spot ({symbol}): {e}")
        return []

if __name__ == "__main__":
    trade_pairs_spot = [
        config.TRADE_PAIR_SPOT_BTCUSDT,
        config.TRADE_PAIR_SPOT_ETHUSDT,
        config.TRADE_PAIR_SPOT_BNBUSDT
    ]

    for pair in trade_pairs_spot:
        trade_history = check_trade_history_spot(pair)
        print(f"\nüîπ L·ªãch s·ª≠ giao d·ªãch Spot ({pair}):")
        for trade in trade_history:
            print(f"üîπ ID: {trade['id']} | Gi√°: {trade['price']} | S·ªë l∆∞·ª£ng: {trade['qty']} | "
                  f"Lo·∫°i: {trade['side']} | Th·ªùi gian: {trade['time']}")
